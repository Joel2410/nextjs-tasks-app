import { useCallback } from "react";
import Head from "next/head";
import Link from "next/link";
import { observer } from "mobx-react-lite";
import { action } from "mobx";

// mui
import Box from "@mui/material/Box";
import Pagination from "@mui/material/Pagination";
import MenuItem from "@mui/material/MenuItem";
import Select, { SelectChangeEvent } from "@mui/material/Select";
import { DataGrid, GridColDef } from "@mui/x-data-grid";

import usersStore from "../stores/users.store";

function Users() {
  const columns: GridColDef[] = [
    {
      field: "firstName",
      headerName: "First name",
      width: 150,
    },
    {
      field: "lastName",
      headerName: "Last name",
      width: 150,
    },
    {
      field: "username",
      headerName: "Username",
      width: 150,
    },
    {
      field: "email",
      headerName: "Email",
      width: 300,
    },
    {
      field: "gender",
      headerName: "Gender",
      width: 100,
    },
  ];
  const onChangePage = action(
    useCallback((_event: React.ChangeEvent<unknown>, page: number) => {
      usersStore.pageNumber = page;
    }, [])
  );

  const onChangePageSize = action(
    useCallback((event: SelectChangeEvent) => {
      usersStore.pageSize = event.target.value as unknown as number;
    }, [])
  );

  return (
    <div className="container">
      <Head>
        <title>Tasks App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="row justify-content-center">
        <div className="my-5">
          <h1 className="my-2">Users list</h1>

          <Link href="/">
            <h5 style={{ color: "blue", cursor: "pointer", maxWidth: 150 }}>
              Go to tasks app
            </h5>
          </Link>
        </div>

        <div
          style={{
            border: "1px",
            borderStyle: "solid",
            borderColor: "lightgray",
            margin: "0px",
            padding: "0px",
          }}
        >
          <Box
            sx={{
              height: 400,
              width: "100%",
              margin: "0px",
              padding: "0px",
            }}
          >
            <DataGrid
              columns={columns}
              rows={usersStore.users}
              rowCount={usersStore.rowsCount}
              pageSize={usersStore.pageSize}
              rowsPerPageOptions={[5, 10, 20]}
              experimentalFeatures={{ newEditingApi: true }}
              pagination={true}
              paginationMode={"server"}
              checkboxSelection
              disableSelectionOnClick
              hideFooterPagination
              hideFooter
            />
          </Box>
          <div className="m-3 d-flex justify-content-end">
            <div className="d-flex justify-content-center align-items-center">
              <p className="m-1 me-2">Rows per page</p>
              <Select
                sx={{ height: 35 }}
                value={usersStore.pageSize as unknown as string}
                onChange={onChangePageSize}
              >
                <MenuItem value={5}>5</MenuItem>
                <MenuItem value={10}>10</MenuItem>
                <MenuItem value={20}>20</MenuItem>
              </Select>
            </div>
            <Pagination
              shape="rounded"
              count={usersStore.pageCount}
              page={usersStore.pageNumber}
              onChange={onChangePage}
            />
          </div>
        </div>
      </main>
    </div>
  );
}

export default observer(Users);
